const { SlashCommandBuilder, AttachmentBuilder, EmbedBuilder, Client, GatewayIntentBits } = require('discord.js');
const { models_path, token, sd_api_url } = require('../config.json');
const fs = require('node:fs');
const path = require('node:path');
var needle = require('needle');

const client = new Client({ intents: [GatewayIntentBits.Guilds] });
let bot_name;
let bot_id;
let bot_avatar;
client.login(token);
client.on('ready', async () => {
	bot_name = client.user.username
	bot_id = client.user.id
	bot_avatar = client.user.avatar
	client.destroy()
})

var files = fs.readdirSync(path.join(models_path, 'Stable-diffusion'), null, true);
let objects = [];

files.forEach(o => {
	objects.push({
		name: `${o}`,
		value: `${o}`
	});
});

module.exports = {
	data: new SlashCommandBuilder()
		.setName('draw')
		.setDescription('Simple draw command with style and prompt')
		.addStringOption(option => {
			option.setName('style')
				.setDescription('The image style')
				.setRequired(true)
				for (let i = 0; i < objects.length; i++) {
					option.addChoices(objects[i])
				}
				return option
		})
		.addStringOption(option =>
			option.setName('prompt')
				.setDescription('The prompt describing the desired image')
				.setRequired(true))
		.addStringOption(option => 
			option.setName('neg-prompt')
				.setDescription('The negative prompt used to describe undesired results')
				.setRequired(false)),
	async execute(interaction) {
		await interaction.reply("Generating...");
		const check_string = interaction.options.getString('style');
		const draw_prompt = interaction.options.getString('prompt');
		var neg_prompt = interaction.options.getString('neg-prompt');

		opt_pay = {
			sd_model_checkpoint: check_string
		};

		needle('post', sd_api_url + '/sdapi/v1/options', opt_pay, { json: true });

		pay = {
			prompt: draw_prompt,
        	negative_prompt: neg_prompt,
        	steps: 30
		};

		needle('post', sd_api_url + '/sdapi/v1/txt2img', pay, { json: true })
			.then((res) => {
				let img = Buffer.from(String(res.body["images"][0]).split(",",1)[0], 'base64');
				const seed = String(res.body["info"]).split('seed": ')[1].split(',')[0];
				fs.writeFileSync("output.png", img, "binary");
				if (!neg_prompt) {
					neg_prompt = "none";
				}
				const file = new AttachmentBuilder('output.png');
				const exampleEmbed = new EmbedBuilder()
					.setColor(0x0099FF)
					.setTitle('AI generated image')
					.setAuthor({ name: bot_name, iconURL: 'https://cdn.discordapp.com/avatars/' + bot_id + '/' + bot_avatar })
					.setDescription('Image generated with model: ' + check_string + ', seed: ' + seed)
					.addFields(
						{ name: 'Prompt:', value: draw_prompt },
						{ name: 'Negative prompt', value: neg_prompt },
					)
					.setImage('attachment://output.png')
					.setTimestamp()
					.setFooter({ text: 'Generated by ' + interaction.member.user.tag, iconURL: 'https://cdn.discordapp.com/avatars/' + interaction.member.id + '/' + interaction.member.user.avatar });
			interaction.editReply({ embeds: [exampleEmbed], files: [file] });
			interaction.get
		});
	},
};
