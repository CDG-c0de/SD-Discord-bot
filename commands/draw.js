const { SlashCommandBuilder, AttachmentBuilder, EmbedBuilder, Client, GatewayIntentBits } = require('discord.js');
const { models_path, token } = require('../config.json');
const fs = require('node:fs');
const path = require('node:path');
const { spawn } = require('child_process');

const client = new Client({ intents: [GatewayIntentBits.Guilds] });
let bot_name;
let bot_id;
let bot_avatar;
client.login(token);
client.on('ready', async () => {
	bot_name = client.user.username
	bot_id = client.user.id
	bot_avatar = client.user.avatar
	client.destroy()
})

var files = fs.readdirSync(path.join(models_path, 'Stable-diffusion'), null, true);
let objects = [];

files.forEach(o => {
	objects.push({
		name: `${o}`,
		value: `${o}`
	});
});

module.exports = {
	data: new SlashCommandBuilder()
		.setName('draw')
		.setDescription('Simple draw command with style and prompt')
		.addStringOption(option => {
			option.setName('style')
				.setDescription('The image style')
				.setRequired(true)
				for (let i = 0; i < objects.length; i++) {
					option.addChoices(objects[i])
				}
				return option
		})
		.addStringOption(option =>
			option.setName('prompt')
				.setDescription('The prompt describing the desired image')
				.setRequired(true))
		.addStringOption(option => 
			option.setName('neg-prompt')
				.setDescription('The negative prompt used to describe undesired results')
				.setRequired(false)),
	async execute(interaction) {
		const check_string = interaction.options.getString('style');
		const draw_prompt = interaction.options.getString('prompt');
		var neg_prompt = interaction.options.getString('neg-prompt');

		await interaction.reply("Generating...");

		const ls = spawn('python', ['create_image.py', '"' + String(check_string) + '"', '"' + String(draw_prompt) + '"', '"' + String(neg_prompt) + '"'], { shell: true });		
		ls.stdout.on('data', function (data) {
			seed = data.toString();
		});
		if (!neg_prompt) {
			neg_prompt = "none";
		}
		ls.on('close', (code) => {
			const file = new AttachmentBuilder('output.png');
			const exampleEmbed = new EmbedBuilder()
				.setColor(0x0099FF)
				.setTitle('AI generated image')
				.setAuthor({ name: bot_name, iconURL: 'https://cdn.discordapp.com/avatars/' + bot_id + '/' + bot_avatar })
				.setDescription('Image generated with model: ' + check_string + ', seed: ' + seed)
				.addFields(
					{ name: 'Prompt:', value: draw_prompt },
					{ name: 'Negative prompt', value: neg_prompt },
				)
				.setImage('attachment://output.png')
				.setTimestamp()
				.setFooter({ text: 'Generated by ' + interaction.member.user.tag, iconURL: 'https://cdn.discordapp.com/avatars/' + interaction.member.id + '/' + interaction.member.user.avatar });
			interaction.editReply({ embeds: [exampleEmbed], files: [file] });
			interaction.get
		});
	},
};
